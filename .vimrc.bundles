"
" Type :so % to refresh .vimrc after making changes
" Type :PluginInstall to update
"

if &compatible
  set nocompatible            " required
end
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

""" Theme / Pretty stuff
"""
" [1]
Plugin 'altercation/vim-colors-solarized'
" Awesome looking meta at bottom
" Fugitive will help with git related stuff, and show branch on status
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
""

""" Some ESSENTIAL IDE like plugins for Vim
"""
" [2] File tree viewer
Plugin 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
nnoremap <C-b> :NERDTreeToggle <CR>


" [4] search filesystem with ctrl+p
Plugin 'ctrlpvim/ctrlp.vim'

" [5] highlighting for Javascript
Plugin 'scrooloose/syntastic' "Syntax Highlighting
Plugin 'pangloss/vim-javascript' | Plugin 'mxw/vim-jsx'
Plugin 'jimmyhchan/dustjs.vim' "Highlighting for dust
Plugin 'mtahmed/click.vim' "Highlighting for click

Plugin 'jiangmiao/auto-pairs' "MANY features, but mostly closes ([{' etc
Plugin 'vim-scripts/HTML-AutoCloseTag' "close tags after >
Plugin 'vim-scripts/tComment' "Comment easily with gcc
Plugin 'tpope/vim-repeat' "allow plugins to utilize . command
Plugin 'tpope/vim-surround' "easily surround things...just read docs for info
Plugin 'vim-scripts/matchit.zip' " % also matches HTML tags / words / etc
Plugin 'duff/vim-scratch' "Open a throwaway scratch buffer
""

""" Utilities / Extras / Etc
"""
" [7] Make gists of current buffer
" View (https://github.com/mattn/gist-vim) for setup instructions
Plugin 'mattn/webapi-vim' | Plugin 'mattn/gist-vim'

" [8] Diary, notes, whatever. It's amazing
Plugin 'vimwiki/vimwiki'

" Opens a browser to preview markdown files
" For this to work, you need to type npm install -g instant-markdown-d
Plugin 'suan/vim-instant-markdown'
""

" [9]
Plugin 'SirVer/ultisnips' | Plugin 'justinj/vim-react-snippets' | Plugin 'colbycheeze/vim-snippets'

" [10] supertab makes YCM compatible with ultisnips
Plugin 'ervandew/supertab'
Plugin 'Valloric/YouCompleteMe', {'do': './install.py --clang-completer'}
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0

Plugin 'ternjs/tern_for_vim', {'do': 'npm install'}


""" TODO / Pluginins to evaluate
" Figure out how to create / version control my own snippets
" Figure out how to change matchit to ALSO use <tab>
" Plugin 'Valloric/YouCompleteMe'
" Plugin 'junegunn/vim-easy-align'
call vundle#end()

"""" PLUGIN RELATED TWEAKS
""
"

" [1]
" Color scheme
syntax enable
let g:solarized_termcolors=16
set background=dark
colorscheme solarized
" Allow powerline symbols to show up
let g:airline_powerline_fonts = 1

" [2]
map <silent> <C-n> :NERDTreeToggle<cr>
nnoremap <C-t> :call ToggleRelativeOn()<cr>
" Close vim if only NERDTree is open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" [3]
" Allow moving around between Tmux windows
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
let g:tmux_navigator_no_mappings = 1
let g:tmux_navigator_save_on_switch = 1
"
"Open a tmux pane with Node
nnoremap <leader>node :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'node'}<cr>

" [4]
" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  let g:ctrlp_working_path_mode = 'r'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" [5] configure syntastic syntax checking to check on open as well as save
let g:syntastic_check_on_open=1
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
" Allow highlighting of HTML within Javascript (for React)
let g:javascript_enable_domhtmlcss = 1
let g:jsx_ext_required = 0

" [6] Key mapping for Cosco.vim - space + ; to add semicolon or comma in Javascript or CSS
autocmd FileType javascript,css nnoremap <silent> <Leader>; :call cosco#commaOrSemiColon()<CR>
autocmd FileType javascript,css inoremap <silent> <Leader>; <c-o>:call cosco#commaOrSemiColon()<CR>

" [7] Gist setup
let g:gist_clip_command = 'pbcopy' "Using Gist will copy URL to clipboard automatically
let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1

" [8] Set Vim Wiki to my Dropbox directory
let g:vimwiki_list = [{'path':'$HOME/Dropbox/vimwiki'}]

" [9]
" Set ultisnips triggers
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsEditSplit="vertical"

" [10] make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" Not sure what the below code does...look into Tern docs etc and figure it out?
" Found this snippet on a forum post that says it gets everything working
" https://github.com/Valloric/YouCompleteMe/issues/570
" autocmd FileType javascript setlocal omnifunc=tern#Complete

" " Run commands that require an interactive shell
" nnoremap <Leader>r :RunInInteractiveShell<space>
"
