""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VUNDLE STUFF
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible " Required by vundle
filetype off     " Required by vundle

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'ervandew/supertab'
Plugin 'mileszs/ack.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-rails'
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-vinegar'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-rake'
Plugin 'KurtPreston/vim-autoformat-rails'
Plugin 'ecomba/vim-ruby-refactoring'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'jvanbaarsen/vim-snippets'
Plugin 'jvanbaarsen/vim-testrunner'
" Plugin 'thoughtbot/vim-rspec'
" Plugin 'zhaocai/GoldenView.Vim' Checking if working without it makes sense
Plugin 'kana/vim-fakeclip'
Plugin 'rizzatti/funcoo.vim'
Plugin 'rizzatti/dash.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'kchmck/vim-coffee-script'
Plugin 'ngmy/vim-rubocop'
Plugin 'plasticboy/vim-markdown'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'sophacles/vim-processing'
Plugin 'kien/ctrlp.vim'
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'rking/ag.vim'
Plugin 'christoomey/vim-run-interactive'
Plugin 'pbrisbin/vim-mkdir'
Plugin 'flazz/vim-colorscheme'

" Vim 2 Gist
Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'

" Rubyblock depends on: [matchit, textobj-user]
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'kana/vim-textobj-user'
Plugin 'vim-scripts/matchit.zip'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

runtime macros/matchit.vim

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Ctrl-P Stuff
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_map = '<Leader>m'
let g:ctrlp_cmd = 'CtrlP'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MAPPINGS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader = ","
nmap <silent> <leader>d <Plug>DashSearch
vmap <C-c> "+y
map <C-t> :tabe<cr>
map <Leader>r :NERDTreeToggle<CR>
map <Leader>gs :Gstatus<CR>
map <Leader>gc :Gcommit<CR>
map <Leader>gac :Gcommit -a<CR>
map <Leader>gw :!git add . && git commit -m 'WIP'<cr>
map <Leader>nn :sp ~/Dropbox/notes/notes.txt<CR>
map <Leader>pnn :sp ~/Dropbox/notes/private-notes.txt<CR>
map <Leader>todo :sp ~/Dropbox/notes/todo.txt<CR>
map <Leader>ptodo :sp ~/Dropbox/notes/private-todo.txt<CR>
map <Leader>ll <esc>i=============================================<cr><esc>
map <Leader>reload :source $MYVIMRC<CR>
map <Leader>t :call RunCurrentTestFile()<cr>
map <Leader>s :call RunNearestTest()<CR>
map <Leader>l :call RunLastTest()<CR>
map <Leader>sn :sp ~/.vim/bundle/vim-snippets/snippets<CR>
map <leader>ri :!rake db:migrate && rake db:migrate RAILS_ENV=test
map <leader>ro :!rake db:rollback && rake db:rollback RAILS_ENV=test
map <leader>b :noh<cr>

" Vim Gist settings
let g:gist_post_private = 1
let g:gist_clip_command = 'pbcopy'

" Disable autofolding for vim-markdown
let g:vim_markdown_folding_disabled=1

" rspec.vim settings
let g:test_runner = "os_x_iterm"

let g:vimrubocop_config = '~/.rubocop.yml'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CTAGS RELATED STUFF
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Exclude Javascript files in :Rtags via rails.vim due to warnings when parsing
let g:Tlist_Ctags_Cmd="ctags --exclude='*.js'"
" Index ctags from any project, including those outside Rails
map <Leader>ct :!ctags -R .<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MAPS TO JUMP TO SPECIFIC FILES
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>gr :topleft :split config/routes.rb<cr>
function! ShowRoutes()
  " Requires 'scratch' plugin
  :topleft 100 :split __Routes__
  " Make sure Vim doesn't write __Routes__ as a file
  :set buftype=nofile
  " Delete everything
  :normal 1GdG
  " Put routes output in buffer
  :0r! rake -s routes
  " Size window to number of lines (1 plus rake output length)
  :exec ":normal " . line("$") . "_ "
  " Move cursor to bottom
  :normal 1GG
  " Delete empty trailing line
  :normal dd
endfunction
map <leader>gR :call ShowRoutes()<cr>
map <leader>gg :topleft 100 :split Gemfile<cr>
map <leader>gS :topleft 100 :split db/schema.rb<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MISC SETS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

syntax on
filetype plugin indent on
hi Search guibg=darkgrey ctermbg=darkgrey
set cursorline
set visualbell
set noerrorbells
set smartcase
set ignorecase
set mouse=a
set clipboard=unnamed
set hidden
set nocompatible
set history=50
set ruler
set showcmd
set autoindent
set showmatch
set nowrap
set autoread
set guifont=Monaco:h12
set smarttab
set relativenumber
set number
set sw=2
set sts=2
set tabstop=2
set expandtab
set laststatus=2
set nofoldenable " No code folding :-)
set tags=./tags;
set wildignore+=*.jpg,*.psd,*.gif,tmp/**,vendor/**,*.png,Export/**
set wildignore+=tags,Assets/images/**,Assets/sounds/**
set hlsearch
set autowrite
set ttyfast
set synmaxcol=128
set ttyscroll=3
set lazyredraw
set wrap
set textwidth=80
set colorcolumn=+1
set noswapfile

" Get rid of the freaking Ex mode
map Q <Nop>

" Switch between the last two files
nnoremap <leader><leader> <c-^>

" Run commands that require an interactive shell
nnoremap <Leader>e :RunInInteractiveShell<space>

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Show the netrw banner always
let g:netrw_banner=1

" Set Colorscheme
set background=dark
colorscheme molokai

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CURSOR STUFF
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" STATUSLINE STUFF
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set laststatus=2
set statusline=\ "
set statusline+=%f\ " file name
set statusline+=[
set statusline+=%{strlen(&ft)?&ft:'none'} " filetype
set statusline+=]
set statusline+=%h%1*%m%r%w%0* " flag
set statusline+=%= " right align
set statusline+=%{fugitive#statusline()}
set statusline+=%-14.(%l,%c%V%)\ %<%P " offset

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" FUNCTIONS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE
function! RenameFile()
	let old_name = expand('%')
	let new_name = input('New file name: ', expand('%'), 'file')
	if new_name != '' && new_name != old_name
		exec ':saveas '. new_name
		exec ':silent !rm '. old_name
		redraw!
	endif
endfunction
map <Leader>n :call RenameFile()<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" AUTOCOMMAND STUFF
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("autocmd")
  augroup vimrcEx
    au!
    autocmd BufReadPost *
        \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
        \   exe "normal g`\"" |
        \ endif
  augroup END
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SEARCH REPLACER
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CHANGE HASH ROCKET TO NEW RUBY STYLE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap _hr :%s/\v:(\w+) \=\>/\1:/g<cr>
nmap _h :s/\v:(\w+) \=\>/\1:/g<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VIM MODE SWITCH LAG FIX
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if ! has("gui_running")
    set ttimeoutlen=10
    augroup FastEscape
        autocmd!
        au InsertEnter * set timeoutlen=0
        au InsertLeave * set timeoutlen=1000
    augroup END
endif
